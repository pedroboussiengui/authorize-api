/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.List;

import org.example.auth.AuthorizationHandler;
import org.example.auth.AuthorizationManager;
import org.example.auth.RoleChecker;
import org.example.auth.SimpleRoleChecker;
import org.example.entity.Role;
import org.example.entity.Unidade;
import org.example.entity.User;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.IsInstanceOf.instanceOf;
import org.junit.Assert;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

public class AppTest {
    @Test
    public void appTestCadastrarUnidadeAuthorization() {
        // criado as entidades
        Unidade u1 = new Unidade(1L, "Unidade I");
        Unidade u2 = new Unidade(2L, "Unidade II");
        Unidade u3 = new Unidade(3L, "Unidade III");

        User pedro = new User(1L, "john@email.com", "John Doe", List.of("gerente", "operador"));
        pedro.addUnidade(u1);
        pedro.addUnidade(u2);

        User maria = new User(2L, "maria@email.com", "Maria Doe", List.of("gerente"));
        maria.addUnidade(u3);

        // setup de autorização
        RoleChecker roleChecker = new SimpleRoleChecker();
        AuthorizationManager authManager = new AuthorizationManager(roleChecker);

        authManager.registerHandler("registrar produto", new AuthorizationHandler<>(
            List.of("gerente", "operador"),
            List.of(
                (user, unidade) -> user.getUnidades().contains(unidade),
                (user, unidade) -> ((Unidade) unidade).getTitle().equals("Unidade I")
            )
        ));

        // validações
        Assert.assertTrue(authManager.authorize("registrar produto", pedro, u1));

        Assert.assertFalse(authManager.authorize("registrar produto", maria, u1));

        Assert.assertFalse(authManager.authorize("registrar produto", maria, u3));
    }

    @Test
    public void appTestRoleEnum() {
        Role adminRole = Role.fromString("admin");
        assertThat(adminRole, instanceOf(Role.class));
        assertEquals(Long.valueOf(1L), adminRole.id);

        Role gerenteRole = Role.fromString("gerente");
        System.out.println(gerenteRole);
        assertThat(gerenteRole, instanceOf(Role.class));
        assertEquals(Long.valueOf(2L), gerenteRole.id);

        Role operadorRole = Role.fromString("operador");
        System.out.println(operadorRole);
        assertThat(operadorRole, instanceOf(Role.class));
        assertEquals(Long.valueOf(3L), operadorRole.id);
    }
}
